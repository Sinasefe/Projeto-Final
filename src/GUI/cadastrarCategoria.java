package GUI;

import DAO.DAOCategoria;
import MODEL.Categoria;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import window.Window;

public class cadastrarCategoria extends javax.swing.JFrame {

    Categoria categoria = new Categoria();
    private DAOCategoria daoCategoria = new DAOCategoria();
    int index;
    window.Window w = new Window();
    static boolean verificacao = false;
    static String tipo;

    /**
     * Creates new form cadastrarCategoria
     */
    public cadastrarCategoria() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/IMAGE/icon.png")).getImage());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblDescricaoCategoria = new javax.swing.JLabel();
        txtDescricaoCategoria = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategoria = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(51, 51, 255));
        setPreferredSize(new java.awt.Dimension(304, 274));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel.setBackground(new java.awt.Color(255, 255, 255));
        painel.setToolTipText("");
        painel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        painel.setMinimumSize(new java.awt.Dimension(305, 236));

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("ADICINAR CATEGORIA DE CONVÊNIO");

        lblDescricaoCategoria.setText("Nome da categoria:");

        txtDescricaoCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescricaoCategoriaKeyReleased(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        tblCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Categorias existentes: "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCategoria);

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelLayout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(lblDescricaoCategoria))
                        .addGroup(painelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(txtDescricaoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDescricaoCategoria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricaoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        try {
            if (!camposVazios()) {
                if (!daoCategoria.pesquisarDescicao(txtDescricaoCategoria.getText()) == true) {

                    preencherInfracao();

                    daoCategoria.inserir(categoria);
                    tblCategoria.setModel(daoCategoria.pesquisar());
                    JOptionPane.showMessageDialog(null, "Inserção feita com sucesso!", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);

                    int resp = JOptionPane.showConfirmDialog(null, "Deseja cadastrar um convênio para essa categoria?", "Novo Convenio", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                    if (resp == JOptionPane.YES_OPTION) {
                        new cadastrarConvenio().setVisible(true);
                        setTipo(txtDescricaoCategoria.getText());
                        setVerificacao(true);
                        this.dispose();
                    }

                    limpar();
                } else {
                    txtDescricaoCategoria.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "Essa categoria já existe", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
                    txtDescricaoCategoria.setBackground(Color.white);
                    txtDescricaoCategoria.setText(null);
                    txtDescricaoCategoria.requestFocus();
                }


            } else {
                JOptionPane.showMessageDialog(null, "Campo(s) em Branco!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro:" + e, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       w.SetAligment(this, "Cadastrar Categoria");
        tblCategoria.setModel(daoCategoria.pesquisar());
    }//GEN-LAST:event_formWindowOpened

    private void txtDescricaoCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoCategoriaKeyReleased
        txtDescricaoCategoria.setText(txtDescricaoCategoria.getText().toUpperCase());
    }//GEN-LAST:event_txtDescricaoCategoriaKeyReleased

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cadastrarCategoria.this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastrarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastrarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastrarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastrarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

                new cadastrarCategoria().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescricaoCategoria;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel painel;
    private javax.swing.JTable tblCategoria;
    private javax.swing.JTextField txtDescricaoCategoria;
    // End of variables declaration//GEN-END:variables

    private boolean camposVazios() {
        boolean verificacao = false;
        if ((txtDescricaoCategoria.getText().equals(""))) {
            verificacao = true;
        }
        return (verificacao);
    }

    private void limpar() {
        txtDescricaoCategoria.setText(null);
    }

    private void preencherInfracao() {
        categoria.setIdCategoria("0");
        categoria.setTipoCategoria(txtDescricaoCategoria.getText());
    }

    public static void setVerificacao(boolean verificacao) {
        cadastrarCategoria.verificacao = verificacao;
    }

    public static boolean isVerificacao() {
        return verificacao;
    }

    public static void setTipo(String tipo) {
        cadastrarCategoria.tipo = tipo;
    }

    public static String getTipo() {
        return tipo;
    }
}
